- [ ] admin 更新题目,就用problem_create.pug,不过要处理可以更新题面,不更新数据的情况,这里使用询问框:是否不上传数据
- [ ] 完善sublist的查询
- [ ] 注意button全部用sub页面的 [复制] 的样式替换了
- [ ] 实现标签功能
    - [ ] 基础 ? 如何在mongodb中快速的利用标签来搜索,聚合?
        - https://developer.aliyun.com/article/6146
    - [ ] 上传标签,原来的标签
    - [ ] 题目列表的标签显示
    - [ ] 标签云-可以分类的标签
        - 样式-> https://www.wowhead.com/frost-death-knight-guide
        - > https://codepen.io/ey_intuitive/pen/bEQpqP
    - [ ] 实现题目搜索功能                                                                                                                            |
        - [x] 使用 https://github.com/iinitd/racci
- [ ] 细节
    - [ ] 用户userinfo 显示自己的所有的文章
    - [ ] 首页显示 最新的文章
    - [ ] 题目显示相关的讨论
    - 上面的只一参数不同的现一个操作
- [ ] minibbs的实现
    - [ ] 留言功能 https://github.com/th720309/node_bbs
    - [ ] 像loj一样只有1层留言 ?
    - [x] 像node_club 一样来设计,分类
    - [x] bbs_post页面,创建题目解析的细节
        -[x] 题目的名称,pid
    - [x] 点赞功能的实现
+--------------------------------------------------------------------------------------------废弃-----------------------------------------------+
|   - [ ] 实现题目搜索功能                                                                                                                            |
|       - [x] 下载nodejieba,分词的方法如下                                                                                                             |
|           ```                                                                                                                               |
|           let only_en = title.replace(/[^a-zA-Z]/g," ").split(" ").filter(d => d.length)                                                    |
|           let only_num = title.replace(/[^0-9]/g," ").split(" ").filter(d => d.length)                                                      |
|           let only_chn = jb.cut( title.replace(/[^\u4e00-\u9fa5]/g,""))                                                                     |
|           cut: [pid,...only_chn,...only_en,...only_num].join("<->")                                                                         |
|           ```                                                                                                                               |
|       - [x] https://docs.mongodb.com/manual/text-search/                                                                                    |
|       - [x] 按标题搜索                                                                                                                           |
|       - [x] jieba分词 配合 mongodb                                                                                                              |
|       - https://github.com/yanyiwu/nodejieba                                                                                                |
|       - https://mlln.cn/2019/06/21/mongodb%E8%A7%A3%E5%86%B3textsearch%E6%90%9C%E7%B4%A2%E4%B8%AD%E6%96%87%E7%9A%84%E9%97%AE%E9%A2%98/      |
|       - https://www.cnblogs.com/wufengtinghai/p/6193152.html                                                                                |
|       - https://stackoverflow.com/questions/42964649/mongoose-full-test-search-does-not-work                                                |
|       - https://docs.mongodb.com/manual/text-search/index.html                                                                              |
|       - [x] 要注意有没有index text 建立                                                                                                             |
|       - [ ] 完成route.yaml http api                                                                                                           |
+---------------------------------------------------------------------------------------------------------------------------------------------+
- [x] help页面
- [x] isJudgeEnd 加上一个Redis来限定3s访问一次
- [x] admin 批量上传题目的脚本
- [x] frond-end 使用的cdn可以通过配置,转成纯本地,也可以cdn
- [x] upload_data_force 与update_problem_force 要有区别
- [x] redis缓存,对problem_list,sublist,problem, submission(非juding状态缓存)
- [x] 数据下载
- [x] problem info populate "bestSub.uid" select "username realname email"
- [x] 完成对题目提交后的各种处理
    - [x] 题目的最佳提交
- [x] problem 的level的对应难度
- [x] user查看评测历史
- [x] user查看评测结果
- [x] 核心对于返回的评测数据的处理 使用koa route_ex
- [x] user提交评测
- [x] 完善judgesever docker的rsync
- [x] user的题目列表
- [x] user的题目显示
- [x] admin的登出与check_login
- [x] 默认创建一个a+b的题目
- [x] admin 上传题目
- [x] 用户的个人界面
- [x] 用户的登出
- [x] 用户的登录,把用户名放到ctx.session里,不用每次请求都查询db
- [x] 用户的注册
- [x] 创建邀请码
- [x] layui中集成 axios
- [x] admin的页面
- [X] admin/login PUG模板


1   入门
2   普级-
3   普级
4   提高-
5   提高
6   省选-
7   省选
8   NOI-
9   NOI
10  地狱
